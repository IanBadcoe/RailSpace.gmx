<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMissile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>obProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_time = 0;

_v[0] = 0;
_v[1] = 0;
_v[2] = 0;

_angle = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_time++;

if (_time == 200)
{
    instance_destroy();
}
    
_p[0] += _v[0];
_p[1] += _v[1];
_h += _v[2];

if (_target != noone)
{
    var d = coord_subtract(_target._p, _p);

    _angle = arctan2(d[0], d[1]);
    var dh = sign(_target._h - _h);
    
    _v[0] = (_v[0] + sin(_angle) * 10) / 2;
    _v[1] = (_v[1] + cos(_angle) * 10) / 2;
    _v[2] = (_v[2] + dh) / 2;
    
    if abs(_h - _target._h) &lt; 0.5 &amp;&amp; coord_length(d) &lt; 20
    {
        with _target play_damage(5);
        
        instance_destroy();
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var fx = global._focus_x;
var fy = global._focus_y;

var ff = pi / 4;

var sa = sin(_angle + ff);
var ca = cos(_angle + ff);

var c;
c[0] = make_coord(_p[0] + sa * 10, _p[1] + ca * 10);
c[1] = make_coord(_p[0] + ca * 10, _p[1] - sa * 10);
c[2] = make_coord(_p[0] - sa * 10, _p[1] - ca * 10);
c[3] = make_coord(_p[0] - ca * 10, _p[1] + sa * 10);

var slant = _v[2] / (abs(_v[2]) + 1);

var tc;

tc[0] = grid_transform(fx, fy, c[0], _h - slant, false);
tc[1] = grid_transform(fx, fy, c[1], _h + slant, false);
tc[2] = grid_transform(fx, fy, c[2], _h + slant, false);
tc[3] = grid_transform(fx, fy, c[3], _h - slant, false);

draw_primitive_begin_texture(pr_trianglestrip, sprite_get_texture(sprite_index, image_index));
grid_draw_vertex_3(tc[0], 0, 0);
grid_draw_vertex_3(tc[1], 0, 1);
grid_draw_vertex_3(tc[3], 1, 0);
grid_draw_vertex_3(tc[2], 1, 1);
draw_primitive_end();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
